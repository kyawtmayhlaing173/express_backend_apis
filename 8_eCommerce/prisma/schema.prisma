// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Cart      Cart[]
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String     @unique
  description String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  cart        Cart?      @relation(fields: [cartId], references: [id])
  cartId      String?    @db.ObjectId
  cartItem    CartItem[]
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cart      Cart?    @relation(fields: [cartId], references: [id])
  cartId    String?  @db.ObjectId
  product   Product?  @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @db.ObjectId
  user      User       @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  items     CartItem[]
  product   Product[]
}
